---
version: 2.0
jobs:
  build:
    docker:
      - image: python:3.6
    steps:
      - run:
          name: Hello world!
          command: echo "Hello world!"
    working_directory: /usr/src/artman/

  build_and_push_docker_image:
    working_directory: /usr/src/artman
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Fingers crossed!
          command: |
            echo "Fingers crossed!"
      - restore_cache:
          keys:
            - artman-{{ .Branch }}
          paths:
            - /caches/artman.tar
      - run:
          name: Load Artman Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/artman.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=artman -t artman --build-arg install_artman_from_source=true .
      - run:
          name: Save Artman Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/artman.tar artman
      - save_cache:
          key: artman-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/artman.tar
      - run:
          name: Run golden tests
          command: |
            docker run -it -e RUNNING_IN_ARTMAN_DOCKER=True -v /tmp/reports:/tmp/reports artman /bin/bash -c "pip install pytest; git clone https://github.com/googleapis/googleapis /artman/test/golden/googleapis; py.test -vv /artman/test/golden/artman_golden_test.py --googleapis-dir=/artman/test/golden/googleapis"
      # When build performance is a concern, consider separating this job into
      # a workflow with multiple jobs and have the smoketest run in parallel
      # with additional paid containers.
      - run:
          name: Run smoketests
          command: |
            mkdir /tmp/reports
            docker run -it -e RUNNING_IN_ARTMAN_DOCKER=True -v /tmp/reports:/tmp/reports artman /bin/bash -c "git clone https://github.com/googleapis/googleapis /tmp/googleapis_smoketest; python3 /artman/test/smoketest_artman.py --root-dir=/tmp/googleapis_smoketest --log=/tmp/reports/smoketest.log"
      - deploy:
          name: Push Artman Docker image
          command: |
            if [ "${DOCKER_EMAIL}" == 'googleapis-publisher@google.com' ]; then
              docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
              docker tag artman "googleapis/artman:AUTO_BUILD_$CIRCLE_BUILD_NUM"
              docker push "googleapis/artman:AUTO_BUILD_$CIRCLE_BUILD_NUM"
              docker tag artman "googleapis/artman:latest"
              docker push "googleapis/artman:latest"
            else
              echo "Environment variables DOCKER_EMAIL, DOCKER_USER, DOCKER_PASS are not properly set in CircleCI project."
              echo "Skip the Artman Docker image publishing step."
            fi
      - run:
          name: Hooray!
          command: echo "Hooray!"
      - store_test_results:
          path: /tmp/reports
      - store_artifacts:
          path: /tmp/reports
      - store_artifacts:
          path: /artman/test/golden/actual_library_example.golden

  unit-python2.7:
    docker:
      - image: python:2.7
    steps:
      - checkout
      - run:
          name: Install nox and codecov.
          command: pip install --upgrade nox-automation codecov
      - run:
          name: Run unit tests.
          command: nox -e "unit_tests(python_version='2.7')"
    working_directory: /usr/src/artman/

  unit-python3.4:
    docker:
      - image: python:3.4
    steps:
      - checkout
      - run:
          name: Install nox and codecov.
          command: pip install --upgrade nox-automation codecov
      - run:
          name: Run unit tests.
          command: nox -e "unit_tests(python_version='3.4')"
    working_directory: /usr/src/artman/

  unit-python3.5:
    docker:
      - image: python:3.5
    steps:
      - checkout
      - run:
          name: Install nox and codecov.
          command: pip install --upgrade nox-automation codecov
      - run:
          name: Run unit tests.
          command: nox -e "unit_tests(python_version='3.5')"
    working_directory: /usr/src/artman/

  unit-python3.6:
    docker:
      - image: python:3.6
    steps:
      - checkout
      - run:
          name: Install nox and codecov.
          command: pip install --upgrade nox-automation codecov
      - run:
          name: Run unit tests.
          command: nox -e "unit_tests(python_version='3.6')"
    working_directory: /usr/src/artman/


  smoke-csharp:
    docker:
      - image: googleapis/artman:latest
        environment:
          TERM: dumb
    steps:
      - checkout
      - run:
          name: Install latest artman
          command: |
            pip uninstall -y googleapis-artman
            pip install --upgrade /usr/src/artman/
      - run:
          name: Build Pub/Sub (C#)
          command: artman --local --config=/googleapis/google/pubsub/artman_pubsub.yaml generate csharp_gapic
      - run:
          name: Build Speech (C#)
          command: artman --local --config=/googleapis/google/cloud/speech/artman_speech_v1.yaml generate csharp_gapic
    working_directory: /usr/src/artman/

  smoke-go:
    docker:
      - image: googleapis/artman:latest
        environment:
          TERM: dumb
    steps:
      - checkout
      - run:
          name: Install latest artman
          command: |
            pip uninstall -y googleapis-artman
            pip install --upgrade /usr/src/artman/
      - run:
          name: Build Pub/Sub (Go)
          command: artman --local --config=/googleapis/google/pubsub/artman_pubsub.yaml publish --dry-run --github-username foo --github-token bar --target staging go_gapic
      - run:
          name: Build Speech (Go)
          command: artman --local --config=/googleapis/google/cloud/speech/artman_speech_v1.yaml publish --dry-run --github-username foo --github-token bar --target staging go_gapic
    working_directory: /usr/src/artman/

  smoke-java:
    docker:
      - image: googleapis/artman:latest
        environment:
          TERM: dumb
    steps:
      - checkout
      - run:
          name: Install latest artman
          command: |
            pip uninstall -y googleapis-artman
            pip install --upgrade /usr/src/artman/
      - run:
          name: Build Pub/Sub (Java)
          command: artman --local --config=/googleapis/google/pubsub/artman_pubsub.yaml publish --dry-run --github-username foo --github-token bar --target staging java_gapic
      - run:
          name: Build Speech (Java)
          command: artman --local --config=/googleapis/google/cloud/speech/artman_speech_v1.yaml publish --dry-run --github-username foo --github-token bar --target staging java_gapic
    working_directory: /usr/src/artman/

  smoke-nodejs:
    docker:
      - image: googleapis/artman:latest
        environment:
          TERM: dumb
    steps:
      - checkout
      - run:
          name: Install latest artman
          command: |
            pip uninstall -y googleapis-artman
            pip install --upgrade /usr/src/artman/
      - run:
          name: Build Pub/Sub (Node.js)
          command: artman --local --config=/googleapis/google/pubsub/artman_pubsub.yaml publish --dry-run --github-username foo --github-token bar --target staging nodejs_gapic
      - run:
          name: Build Speech (Node.js)
          command: artman --local --config=/googleapis/google/cloud/speech/artman_speech_v1.yaml publish --dry-run --github-username foo --github-token bar --target staging nodejs_gapic
    working_directory: /usr/src/artman/

  smoke-php:
    docker:
      - image: googleapis/artman:latest
        environment:
          TERM: dumb
    steps:
      - checkout
      - run:
          name: Install latest artman
          command: |
            pip uninstall -y googleapis-artman
            pip install --upgrade /usr/src/artman/
      - run:
          name: Build Pub/Sub (PHP)
          command: artman --local --config=/googleapis/google/pubsub/artman_pubsub.yaml publish --dry-run --github-username foo --github-token bar --target staging php_gapic
      - run:
          name: Build Speech (PHP)
          command: artman --local --config=/googleapis/google/cloud/speech/artman_speech_v1.yaml publish --dry-run --github-username foo --github-token bar --target staging php_gapic
    working_directory: /usr/src/artman/

  smoke-python:
    docker:
      - image: googleapis/artman:latest
        environment:
          TERM: dumb
    steps:
      - checkout
      - run:
          name: Install latest artman
          command: |
            pip uninstall -y googleapis-artman
            pip install --upgrade /usr/src/artman/
      - run:
          name: Build Pub/Sub (Python)
          command: artman --local --config=/googleapis/google/pubsub/artman_pubsub.yaml publish --dry-run --github-username foo --github-token bar --target staging python_gapic
      - run:
          name: Build Speech (Python)
          command: artman --local --config=/googleapis/google/cloud/speech/artman_speech_v1.yaml publish --dry-run --github-username foo --github-token bar --target staging python_gapic
    working_directory: /usr/src/artman/

  smoke-ruby:
    docker:
      - image: googleapis/artman:latest
        environment:
          TERM: dumb
    steps:
      - checkout
      - run:
          name: Install latest artman
          command: |
            pip uninstall -y googleapis-artman
            pip install --upgrade /usr/src/artman/
      - run:
          name: Build Pub/Sub (Ruby)
          command: artman --local --config=/googleapis/google/pubsub/artman_pubsub.yaml publish --dry-run --github-username foo --github-token bar --target staging ruby_gapic
      - run:
          name: Build Speech (Ruby)
          command: artman --local --config=/googleapis/google/cloud/speech/artman_speech_v1.yaml publish --dry-run --github-username foo --github-token bar --target staging ruby_gapic
    working_directory: /usr/src/artman/

  golden-test:
    docker:
      - image: googleapis/artman:latest
        environment:
          TERM: dumb
    steps:
      - checkout
      - run:
          name: Install latest artman
          command: |
            pip install pytest
            pip uninstall -y googleapis-artman
            pip install --upgrade /usr/src/artman/
            git clone https://github.com/googleapis/googleapis /usr/src/artman/test/golden/googleapis
      - run:
          name: Run golden test
          # Set the environment variable so that the cached shared config will be used during the smoketest.
          command: export RUNNING_IN_ARTMAN_DOCKER=True && py.test test/golden/artman_golden_test.py --googleapis-dir=/usr/src/artman/test/golden/googleapis
      - store_artifacts:
            path: /usr/src/artman/test/golden/actual_library_example.golden
      - store_artifacts:
            path: /usr/src/artman/test/golden/actual_library_example_legacy.golden
    working_directory: /usr/src/artman/

workflows:
  version: 2
  tests:
    jobs:
      - unit-python2.7
      - unit-python3.4
      - unit-python3.5
      - unit-python3.6
      - smoke-csharp
      - smoke-go
      - smoke-java
      - smoke-nodejs
      - smoke-php
      - smoke-python
      - smoke-ruby
      - golden-test
  build_and_push_docker_image:
    jobs:
      - build_and_push_docker_image:
          filters:
            branches:
              only: master
